<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doo.dao.DailyScoreMapper" >
  <resultMap id="BaseResultMap" type="com.doo.pojo.DailyScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="stu_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="classwork" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="extrawork" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="writingapec" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="need_revise" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="revised" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, stu_id, classwork, extrawork, writingapec, need_revise, revised, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from daily_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from daily_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.doo.pojo.DailyScore" >
    insert into daily_score (id, stu_id, classwork, 
      extrawork, writingapec, need_revise, 
      revised, create_time)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{classwork,jdbcType=TINYINT}, 
      #{extrawork,jdbcType=TINYINT}, #{writingapec,jdbcType=TINYINT}, #{needRevise,jdbcType=TINYINT}, 
      #{revised,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.doo.pojo.DailyScore" >
    insert into daily_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="classwork != null" >
        classwork,
      </if>
      <if test="extrawork != null" >
        extrawork,
      </if>
      <if test="writingapec != null" >
        writingapec,
      </if>
      <if test="needRevise != null" >
        need_revise,
      </if>
      <if test="revised != null" >
        revised,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="classwork != null" >
        #{classwork,jdbcType=TINYINT},
      </if>
      <if test="extrawork != null" >
        #{extrawork,jdbcType=TINYINT},
      </if>
      <if test="writingapec != null" >
        #{writingapec,jdbcType=TINYINT},
      </if>
      <if test="needRevise != null" >
        #{needRevise,jdbcType=TINYINT},
      </if>
      <if test="revised != null" >
        #{revised,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.doo.pojo.DailyScore" >
    update daily_score
    <set >
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="classwork != null" >
        classwork = #{classwork,jdbcType=TINYINT},
      </if>
      <if test="extrawork != null" >
        extrawork = #{extrawork,jdbcType=TINYINT},
      </if>
      <if test="writingapec != null" >
        writingapec = #{writingapec,jdbcType=TINYINT},
      </if>
      <if test="needRevise != null" >
        need_revise = #{needRevise,jdbcType=TINYINT},
      </if>
      <if test="revised != null" >
        revised = #{revised,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doo.pojo.DailyScore" >
    update daily_score
    set stu_id = #{stuId,jdbcType=INTEGER},
      classwork = #{classwork,jdbcType=TINYINT},
      extrawork = #{extrawork,jdbcType=TINYINT},
      writingapec = #{writingapec,jdbcType=TINYINT},
      need_revise = #{needRevise,jdbcType=TINYINT},
      revised = #{revised,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>